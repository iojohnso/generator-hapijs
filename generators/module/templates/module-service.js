// This is a file generated by the yeoman generator hapijs

/**
 * Service which handles any business logic relating to <%= name %>
 *
 * @type {<%= name %>Dao|exports}
 */
var <%= daoName %> = require('./<%= name %>-dao');
var Boom = require('boom');

/**
 * Creates a <%= name %>
 *
 * @param payload - The data to be used to create a <%= name %>
 * @param callback
 */
exports.create = function (payload, callback) {

	<%= daoName %>.create(req.payload, function (err, data) {
		if (err) {
			return callback(Boom.wrap(err));
		}
		callback(null, data);
	});
};

/**
 * Gets all <%= pluralName %>
 *
 * @param callback
 */
exports.find = function (callback) {

	<%= daoName %>.find(function (err, data) {
		if (err) {
			return callback(Boom.wrap(err));
		}
		callback(null, data);
	});
};

/**
 * Get a specific <%= name %> by id
 *
 * @param id - The id of the <%= name %> to get
 * @param callback
 */
exports.findById = function (id, callback) {

	<%= daoName %>.findById(id, function (err, data) {
		if (err) {
			return callback(Boom.wrap(err));
		}
		callback(null, data);
	});
};

/**
 * Update a specific <%= name %> by id
 *
 * @param id - The id of the <%= name %> to be updated
 * @param payload - The data to be updated
 * @param callback
 */
exports.update = function (id, payload, callback) {

	<%= daoName %>.update(id, payload, function (err, data) {
		if (err) {
			return callback(Boom.wrap(err));
		}
		callback(null, data);
	});
};
		
/**
 * Remove a specific <%= name %> by id
 *
 * @param id- The id of the <%= name %> to be deleted
 * @param callback
 */
exports.remove = function (id, callback) {

	<%= daoName %>.remove(id, function (err, data) {
		if (err) {
			return callback(Boom.wrap(err));
		}
		callback(null, data);
	});
};

/* Add new methods above */
