// This is a file generated by the yeoman generator hapijs

/**
 * All the endpoints for anything related to <%= name %>
 *
 * @type {exports}
 */
var Joi = require('joi');
var <%= serviceName %> = require('./<%= name %>-service');

module.exports = function() {
  return [
    {
      method: 'POST',
      path: '/<%= pluralName %>',
      config: {
        description: 'Creates a <%= name %>',
        handler: function (req, reply) {
					<%= serviceName %>.create(req.payload, function (err, data) {
						if (err) {
							return reply(Boom.wrap(err));
						}
						reply(data);
					});
				},
        validate: {
          payload: {
            // TODO: Add some validations
          }
        }
      }
    },
		
    {
      method: 'GET',
      path: '/<%= pluralName %>',
      config : {
        description: 'Fetches all <%= pluralName %>',
        handler: function (req, reply) {
					<%= serviceName %>.find(function (err, data) {
						if (err) {
							return reply(Boom.wrap(err));
						}
						reply(data);
					});
				}
      }
    },
		
    {
      method: 'GET',
      path: '/<%= pluralName %>/{id}',
      config : {
        description: 'Fetches a <%= name %> by id',
        handler: function (req, reply) {
					<%= serviceName %>.findById(req.params.id, function (err, data) {
						if (err) {
							return reply(Boom.wrap(err));
						}
						reply(data);
					});
				},
        validate: {
          params: {
            id: Joi.number().integer().required()
          }
        }
      }
    },
		
    {
      method: 'PUT',
      path: '/<%= pluralName %>/{id}',
      config : {
        description: 'Updates a <%= name %> for a specific id',
        handler: function (req, reply) {
					<%= serviceName %>.update(req.params.id, req.payload, function (err, data) {
						if (err) {
							return reply(Boom.wrap(err));
						}
						reply(data);
					});
				},
        validate: {
          params: {
            id: Joi.number().integer().required()
          },
          payload: {
            // TODO: Add some validations
          }
        }
      }
    },
		
    {
      method: 'DELETE',
      path: '/<%= pluralName %>/{id}',
      config : {
        description: 'Remove a <%= name %> for a specific id',
        handler: function (req, reply) {
					<%= serviceName %>.remove(req.params.id, function (err, data) {
						if (err) {
							return reply(Boom.wrap(err));
						}
						reply(data);
					});
				},
        validate: {
          params: {
            id: Joi.number().integer().required()
          }
        }
      }
    }

		/* Add new methods above */
  ]
}();
